{"version":3,"sources":["redux/types.js","views/QRCodeView.js","redux/actions.js","views/ListCodesView.js","views/InfoQRCodesView.js","App.js","redux/codesReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["POST_DATA","CLEAR_DATA","bridge","subscribe","e","detail","type","url","data","code_data","toString","send","bridgeEvent","mapDispatchToProps","postData","payload","connect","syncData","activePanel","id","style","display","justifyContent","size","mode","width","height","alignItems","onClick","QRCodeView","useState","codes","setCodes","keys","console","log","useEffect","InfoQRCodesView","then","r","state","viewWidth","useAdaptivity","activeView","setActiveView","setActivePanel","toggleContext","header","separator","spaced","ViewWidth","MOBILE","aside","transform","opened","onClose","before","data-mode","ListCodesView","initialState","repository","command","branch","syncTime","rootReducer","combineReducers","action","persistConfig","key","storage","pReducer","persistReducer","store","createStore","compose","window","__REDUX_DEVTOOLS_EXTENSION__","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b52f3ad9.chunk.js","sourcesContent":["export const POST_DATA = 'POST_DATA'\nexport const CLEAR_DATA = 'CLEAR_DATA'","import React from \"react\";\nimport {Div, Button, Group, Panel, View, CardGrid, Card} from \"@vkontakte/vkui\";\nimport bridge from \"@vkontakte/vk-bridge\";\n\nimport {connect} from 'react-redux'\nimport {postData} from \"../redux/actions\";\n\nfunction showFrameQR() {\n    bridge.send(\"VKWebAppOpenCodeReader\");\n}\nbridge.subscribe((e) => bridgeEvent(e));\n\nfunction bridgeEvent(e) {\n    if (e.detail.type === 'VKWebAppOpenCodeReaderResult') {\n        let url = e.detail.data.code_data.toString();\n        bridge.send(\"VKWebAppStorageSet\", {\"key\": url, \"value\": url});\n    }\n}\n\nfunction QRCodeView({syncData}) {\n    return (\n        <View activePanel=\"main\" id=\"view1\">\n            <Panel id=\"main\">\n                <Group>\n                    <CardGrid style={{display: \"flex\", justifyContent: \"center\"}}>\n                        <Card size=\"l\" mode=\"shadow\" style={{width: \"100%\"}}>\n                            <div style={{ height: \"50vh\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                                <Div onClick={() => showFrameQR()}>\n                                    <Button style={{height: \"70px\"}} mode=\"outline\" size=\"l\" >Сканировать QR код</Button>\n                                </Div>\n                            </div>\n                        </Card>\n                    </CardGrid>\n                </Group>\n            </Panel>\n        </View>\n    );\n}\n\nconst mapDispatchToProps = { postData }\nexport default connect(null, mapDispatchToProps)(QRCodeView);","import {POST_DATA} from \"./types\";\n\nexport function postData(data) {\n    return {\n        type: POST_DATA,\n        payload: data\n    }\n}","import React, {useEffect, useState} from \"react\";\nimport {Group, Panel, View} from \"@vkontakte/vkui\";\nimport bridge from \"@vkontakte/vk-bridge\";\n\n\nfunction QRCodeView() {\n    const [codes, setCodes] = useState([]);\n\n    bridge.subscribe((e) => bridgeEvent(e));\n    function bridgeEvent(e) {\n        if (e.detail.type === 'VKWebAppStorageGetKeysResult') {\n            setCodes(e.detail.data.keys);\n            console.log(\"отправлен запрос +1\");\n        }\n    }\n\n    useEffect(() => {\n        console.log(\"render\");\n        bridge.send(\"VKWebAppStorageGetKeys\", {\"count\": 1000, \"offset\": 0});\n    }, [])\n\n    return (\n        <View activePanel=\"main\" id=\"view2\">\n            <Panel id=\"main\">\n                <Group>\n                    <h1>Список твоих QR кодов</h1>\n                    {\"Arr\"} {codes.toString()}\n                </Group>\n            </Panel>\n        </View>\n    );\n}\n\nexport default QRCodeView;","import React from \"react\";\nimport {Group, Panel, View} from \"@vkontakte/vkui\";\n\n\n\nfunction InfoQRCodesView() {\n    return (\n        <View activePanel=\"main\" id=\"view3\">\n            <Panel id=\"main\">\n                <Group>\n                    <h1>Количество QR кодов</h1>\n                    <p>123 шт.</p>\n                </Group>\n            </Panel>\n        </View>\n    );\n}\n\nexport default InfoQRCodesView;","import React, {useState} from 'react';\n\nimport './App.css';\nimport {connect} from 'react-redux'\nimport bridge from '@vkontakte/vk-bridge';\n\nimport QRCodeView from './views/QRCodeView'\nimport ListCodesView from './views/ListCodesView'\nimport InfoQRCodesView from './views/InfoQRCodesView'\n\nimport {\n    AdaptivityProvider,\n    ConfigProvider,\n    useAdaptivity,\n    AppRoot,\n    SplitLayout,\n    SplitCol,\n    ViewWidth,\n    PanelHeader, Root, PanelHeaderContent, PanelHeaderContext, Cell, List,\n} from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport {\n    Icon16Dropdown,\n    Icon28ArticleOutline, Icon28CameraOutline, Icon28LikeOutline,\n} from \"@vkontakte/icons\";\n\nbridge.send(\"VKWebAppInit\", {}).then(r => console.log(\"Bridge:\" , r));\n\nconst App = ({syncData}) => {\n    const { viewWidth } = useAdaptivity();\n    const [activeView, setActiveView] = useState('view1');\n\n\n    const [activePanel, setActivePanel] = useState(false);\n\n    function toggleContext () {\n        setActivePanel(!activePanel);\n    }\n\n    return (\n\n        <ConfigProvider>\n            <AdaptivityProvider>\n                <AppRoot>\n                    <SplitLayout header={<PanelHeader separator={false} />}>\n                        <SplitCol spaced={viewWidth && viewWidth > ViewWidth.MOBILE}>\n\n                            <PanelHeader>\n                                <PanelHeaderContent\n                                    aside={<Icon16Dropdown style={{ transform: `rotate(${activePanel ? '180deg' : '0'})` }} />}\n                                    onClick={toggleContext}>\n                                    VK-QRCode\n                                </PanelHeaderContent>\n                            </PanelHeader>\n\n                            <PanelHeaderContext opened={activePanel} onClose={() => toggleContext}>\n                                <List>\n                                    <Cell\n                                        before={<Icon28CameraOutline />}\n                                        onClick={() => {setActiveView(\"view1\"); setActivePanel(false)}}\n                                        data-mode=\"all\"\n                                    >\n                                        Отсканировать QR код\n                                    </Cell>\n                                    <Cell\n                                        before={<Icon28LikeOutline />}\n                                        onClick={() => {setActiveView(\"view2\"); setActivePanel(false)}}\n                                        data-mode=\"all\"\n                                    >\n                                        Мои QR коды\n                                    </Cell>\n                                    <Cell\n                                        before={<Icon28ArticleOutline />}\n                                        onClick={() => {setActiveView(\"view3\"); setActivePanel(false)}}\n                                        data-mode=\"managed\"\n                                    >\n                                        Количество QR кодов\n                                    </Cell>\n                                </List>\n                            </PanelHeaderContext>\n\n                            <Root activeView={activeView}>\n                                <QRCodeView syncData={syncData} id=\"view1\"/>\n                                <ListCodesView syncData={syncData} id=\"view2\"/>\n                                <InfoQRCodesView syncData={syncData} id=\"view3\"/>\n                            </Root>\n                        </SplitCol>\n                    </SplitLayout>\n                </AppRoot>\n            </AdaptivityProvider>\n        </ConfigProvider>\n\n\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        syncData: state.data.data\n    }\n}\n\nexport default connect(mapStateToProps, null)(App);\n","import {POST_DATA} from \"./types\";\nimport {CLEAR_DATA} from \"./types\";\n\nconst initialState = {\n    data: {\n        repository: '',\n        command: '',\n        branch: '',\n        syncTime: 1\n    }\n}\n\nexport const codesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_DATA:\n            return { ...state, data: action.payload }\n        case CLEAR_DATA:\n            console.log('OK');\n            return {...state, data: initialState.data}\n        default: return state;\n    }\n}","import {combineReducers} from 'redux'\nimport {codesReducer} from \"./codesReducer\";\nexport const rootReducer = combineReducers({\n    data: codesReducer\n})","import {createStore, compose} from 'redux';\n\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport {rootReducer} from './rootReducer';\nconst persistConfig = {\n    key: 'authType',\n    storage: storage\n};\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(pReducer, compose(\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n))\nconst persistor = persistStore(store);\nexport { persistor, store };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport {Provider} from 'react-redux'\nimport { store } from './redux/store';\n\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport bridge from '@vkontakte/vk-bridge';\n\nbridge.send(\"VKWebAppInit\", {}).then(r => console.log(\"Bridge:\" , r));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}