{"version":3,"sources":["views/QRCodeView.js","views/ListCodesView.js","views/InfoQRCodesView.js","App.js","index.js"],"names":["bridge","subscribe","e","detail","type","console","log","data","code_data","bridgeEvent","QRCodeView","activePanel","id","style","display","justifyContent","size","mode","width","height","alignItems","onClick","send","InfoQRCodesView","then","r","App","viewWidth","useAdaptivity","useState","activeView","setActiveView","setActivePanel","toggleContext","header","separator","spaced","ViewWidth","MOBILE","aside","transform","opened","onClose","before","ListCodesView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAQAA,IAAOC,WAAU,SAACC,GAAD,OAEjB,SAAqBA,GACK,iCAAlBA,EAAEC,OAAOC,OACTC,QAAQC,IAAI,OACZD,QAAQC,IAAIJ,EAAEC,OAAOI,KAAKC,YALVC,CAAYP,MA6BrBQ,MApBf,WACI,OACI,cAAC,IAAD,CAAMC,YAAY,OAAOC,GAAG,QAA5B,SACI,cAAC,IAAD,CAAOA,GAAG,OAAV,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUC,MAAO,CAACC,QAAS,OAAQC,eAAgB,UAAnD,SACI,cAAC,IAAD,CAAMC,KAAK,IAAIC,KAAK,SAASJ,MAAO,CAACK,MAAO,QAA5C,SACI,qBAAKL,MAAO,CAAEM,OAAQ,OAAQL,QAAS,OAAQM,WAAY,SAAUL,eAAgB,UAArF,SACI,cAAC,IAAD,CAAKM,QAAS,WAnB1CrB,IAAOsB,KAAK,2BAmBgB,SACI,cAAC,IAAD,CAAQT,MAAO,CAACM,OAAQ,QAASF,KAAK,UAAUD,KAAK,IAArD,qHCLrBN,MAZf,WACI,OACI,cAAC,IAAD,CAAMC,YAAY,OAAOC,GAAG,QAA5B,SACI,cAAC,IAAD,CAAOA,GAAG,OAAV,SACI,cAAC,IAAD,UACI,8ICILW,MAbf,WACI,OACI,cAAC,IAAD,CAAMZ,YAAY,OAAOC,GAAG,QAA5B,SACI,cAAC,IAAD,CAAOA,GAAG,OAAV,SACI,eAAC,IAAD,WACI,gIACA,0D,4CCcpBZ,IAAOsB,KAAK,eAAgB,IAAIE,MAAK,SAAAC,GAAC,OAAIpB,QAAQC,IAAI,UAAYmB,MAsEnDC,MApEf,WACI,IAAQC,EAAcC,cAAdD,UACR,EAAoCE,mBAAS,SAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAGA,EAAsCF,oBAAS,GAA/C,mBAAOlB,EAAP,KAAoBqB,EAApB,KAEA,SAASC,IACLD,GAAgBrB,GAGpB,OAEI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAauB,OAAQ,cAAC,IAAD,CAAaC,WAAW,IAA7C,SACI,eAAC,IAAD,CAAUC,OAAQT,GAAaA,EAAYU,IAAUC,OAArD,UAEI,cAAC,IAAD,UACI,cAAC,IAAD,CACIC,MAAO,cAAC,IAAD,CAAgB1B,MAAO,CAAE2B,UAAU,UAAD,OAAY7B,EAAc,SAAW,IAArC,QACzCU,QAASY,EAFb,yBAOJ,cAAC,IAAD,CAAoBQ,OAAQ9B,EAAa+B,QAAS,kBAAMT,GAAxD,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIU,OAAQ,cAAC,IAAD,IACRtB,QAAS,WAAOU,EAAc,SAAUC,GAAe,IACvD,YAAU,MAHd,kHAOA,cAAC,IAAD,CACIW,OAAQ,cAAC,IAAD,IACRtB,QAAS,WAAOU,EAAc,SAAUC,GAAe,IACvD,YAAU,MAHd,4DAOA,cAAC,IAAD,CACIW,OAAQ,cAAC,IAAD,IACRtB,QAAS,WAAOU,EAAc,SAAUC,GAAe,IACvD,YAAU,UAHd,iHAUR,eAAC,IAAD,CAAMF,WAAYA,EAAlB,UACI,cAAC,EAAD,CAAYlB,GAAG,UACf,cAACgC,EAAD,CAAehC,GAAG,UAClB,cAAC,EAAD,CAAiBA,GAAG,yBC3EpDZ,IAAOsB,KAAK,eAAgB,IAAIE,MAAK,SAAAC,GAAC,OAAIpB,QAAQC,IAAI,UAAYmB,MAElEoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.34246164.chunk.js","sourcesContent":["import React from \"react\";\nimport {Div, Button, Group, Panel, PanelHeader, View, CardGrid, Card} from \"@vkontakte/vkui\";\nimport bridge from \"@vkontakte/vk-bridge\";\n\n\nfunction send() {\n    bridge.send(\"VKWebAppOpenCodeReader\");\n}\nbridge.subscribe((e) => bridgeEvent(e));\n\nfunction bridgeEvent(e) {\n    if (e.detail.type === 'VKWebAppOpenCodeReaderResult') {\n        console.log(\"yes\");\n        console.log(e.detail.data.code_data);\n    }\n}\n\nfunction QRCodeView() {\n    return (\n        <View activePanel=\"main\" id=\"view1\">\n            <Panel id=\"main\">\n                <Group>\n                    <CardGrid style={{display: \"flex\", justifyContent: \"center\"}}>\n                        <Card size=\"l\" mode=\"shadow\" style={{width: \"100%\"}}>\n                            <div style={{ height: \"50vh\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                                <Div onClick={() => send()}>\n                                    <Button style={{height: \"70px\"}} mode=\"outline\" size=\"l\" >Сканировать QR код</Button>\n                                </Div>\n                            </div>\n                        </Card>\n                    </CardGrid>\n                </Group>\n            </Panel>\n        </View>\n    );\n}\n\nexport default QRCodeView;","import React from \"react\";\nimport {Div, Button, Group, Panel, PanelHeader, View, CardGrid, Card} from \"@vkontakte/vkui\";\nimport bridge from \"@vkontakte/vk-bridge\";\n\n\nfunction send() {\n    bridge.send(\"VKWebAppOpenCodeReader\");\n}\n\nfunction QRCodeView() {\n    return (\n        <View activePanel=\"main\" id=\"view2\">\n            <Panel id=\"main\">\n                <Group>\n                    <h1>Список твоих QR кодов</h1>\n                </Group>\n            </Panel>\n        </View>\n    );\n}\n\nexport default QRCodeView;","import React from \"react\";\nimport {Group, Panel, View} from \"@vkontakte/vkui\";\n\n\n\nfunction InfoQRCodesView() {\n    return (\n        <View activePanel=\"main\" id=\"view3\">\n            <Panel id=\"main\">\n                <Group>\n                    <h1>Количество QR кодов</h1>\n                    <p>123 шт.</p>\n                </Group>\n            </Panel>\n        </View>\n    );\n}\n\nexport default InfoQRCodesView;","import React, {useState} from 'react';\n\nimport './App.css';\nimport bridge from '@vkontakte/vk-bridge';\n\nimport QRCodeView from './views/QRCodeView'\nimport ListCodesView from './views/ListCodesView'\nimport InfoQRCodesView from './views/InfoQRCodesView'\n\nimport {\n    AdaptivityProvider,\n    ConfigProvider,\n    useAdaptivity,\n    AppRoot,\n    SplitLayout,\n    SplitCol,\n    ViewWidth,\n    PanelHeader, Root, PanelHeaderContent, PanelHeaderContext, Cell, List,\n} from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport {\n    Icon16Dropdown,\n    Icon28ArticleOutline, Icon28CameraOutline, Icon28LikeOutline,\n} from \"@vkontakte/icons\";\n\nbridge.send(\"VKWebAppInit\", {}).then(r => console.log(\"Bridge:\" , r));\n\nfunction App() {\n    const { viewWidth } = useAdaptivity();\n    const [activeView, setActiveView] = useState('view1');\n\n\n    const [activePanel, setActivePanel] = useState(false);\n\n    function toggleContext () {\n        setActivePanel(!activePanel);\n    }\n\n    return (\n\n        <ConfigProvider>\n            <AdaptivityProvider>\n                <AppRoot>\n                    <SplitLayout header={<PanelHeader separator={false} />}>\n                        <SplitCol spaced={viewWidth && viewWidth > ViewWidth.MOBILE}>\n\n                            <PanelHeader>\n                                <PanelHeaderContent\n                                    aside={<Icon16Dropdown style={{ transform: `rotate(${activePanel ? '180deg' : '0'})` }} />}\n                                    onClick={toggleContext}>\n                                    VK-QRCode\n                                </PanelHeaderContent>\n                            </PanelHeader>\n\n                            <PanelHeaderContext opened={activePanel} onClose={() => toggleContext}>\n                                <List>\n                                    <Cell\n                                        before={<Icon28CameraOutline />}\n                                        onClick={() => {setActiveView(\"view1\"); setActivePanel(false)}}\n                                        data-mode=\"all\"\n                                    >\n                                        Отсканировать QR код\n                                    </Cell>\n                                    <Cell\n                                        before={<Icon28LikeOutline />}\n                                        onClick={() => {setActiveView(\"view2\"); setActivePanel(false)}}\n                                        data-mode=\"all\"\n                                    >\n                                        Мои QR коды\n                                    </Cell>\n                                    <Cell\n                                        before={<Icon28ArticleOutline />}\n                                        onClick={() => {setActiveView(\"view3\"); setActivePanel(false)}}\n                                        data-mode=\"managed\"\n                                    >\n                                        Количество QR кодов\n                                    </Cell>\n                                </List>\n                            </PanelHeaderContext>\n\n                            <Root activeView={activeView}>\n                                <QRCodeView id=\"view1\"/>\n                                <ListCodesView id=\"view2\"/>\n                                <InfoQRCodesView id=\"view3\"/>\n                            </Root>\n                        </SplitCol>\n                    </SplitLayout>\n                </AppRoot>\n            </AdaptivityProvider>\n        </ConfigProvider>\n\n\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport bridge from '@vkontakte/vk-bridge';\n\nbridge.send(\"VKWebAppInit\", {}).then(r => console.log(\"Bridge:\" , r));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}